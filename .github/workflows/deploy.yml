name: Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy_worker:
    runs-on: ubuntu-latest
    name: Worker
    defaults:
      run:
        working-directory: server
    steps:
      - uses: actions/checkout@v2
      - name: Read Node version from .nvmrc
        run: echo ::set-output name=NVMRC::$(cat .nvmrc)
        id: nvm
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '${{ steps.nvm.outputs.NVMRC }}'
      - run: yarn
      - name: Publish
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          workingDirectory: 'server'
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: publish
  deploy_pages:
    runs-on: ubuntu-latest
    name: Pages
    defaults:
      run:
        working-directory: client
    steps:
      - uses: actions/checkout@v2
      - name: Read Node version from .nvmrc
        run: echo ::set-output name=NVMRC::$(cat .nvmrc)
        id: nvm
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '${{ steps.nvm.outputs.NVMRC }}'
      - run: yarn
      - run: echo "REACT_APP_API_ENDPOINT=https://dicewizard-net.jasoncabot.workers.dev" > .env
      - run: echo "REACT_APP_WS_ENDPOINT=wss://dicewizard-net.jasoncabot.workers.dev" >> .env
      - run: yarn build
      - name: Publish
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          workingDirectory: 'client'
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages publish --project-name=$SITE build
        env:
          SITE: dicewizard-net
