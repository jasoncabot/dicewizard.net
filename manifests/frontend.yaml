apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: diceatthetable.azurecr.io/frontend
        ports:
        - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app: frontend
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: frontend
  annotations:
    certmanager.k8s.io/cluster-issuer: letsencrypt
    appgw.ingress.kubernetes.io/ssl-redirect: "true"
    kubernetes.io/ingress.class: nginx
spec:
  tls:
  - hosts:
    - dicewizard.net
    secretName: dicewizard-net
  rules:
  - host: dicewizard.net
    http:
      paths:
      - backend:
          serviceName: frontend
          servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: frontend-www
  annotations:
    certmanager.k8s.io/cluster-issuer: letsencrypt
    appgw.ingress.kubernetes.io/ssl-redirect: "true"
    kubernetes.io/ingress.class: azure/application-gateway
spec:
  tls:
  - hosts:
    - www.dicewizard.net
    secretName: www-dicewizard-net
  rules:
  - host: www.dicewizard.net
    http:
      paths:
      - backend:
          serviceName: frontend
          servicePort: 80
