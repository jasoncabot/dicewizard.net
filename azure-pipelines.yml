trigger:
- master

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '91c7cb24-569e-4d44-8a45-f9703159ec96'
  azureStorageSubscription: 'Jason Personal AIRs Subscription (04fe963c-dced-4688-9372-1be7f86c986f)'

  kubernetesServiceConnection: 'Production-prod-default-1571693427914'

  # Web app name
  webAppName: 'diceatthetable'
  
  # Environment name
  environmentName: 'diceatthetable'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: BuildFrontend
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build Frontend
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'acr'
        repository: 'frontend'
        command: 'buildAndPush'
        Dockerfile: 'frontend/Dockerfile'
        tags: 'v1.$(Build.BuildId)'
    - task: PublishPipelineArtifact@0
      inputs:
        artifactName: 'frontend-manifest'
        targetPath: 'manifests/frontend.yaml'

- stage: BuildBackend
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build Backend
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'acr'
        repository: 'backend'
        command: 'buildAndPush'
        Dockerfile: 'backend/Dockerfile'
        tags: 'v1.$(Build.BuildId)'
    - task: PublishPipelineArtifact@0
      inputs:
        artifactName: 'backend-manifest'
        targetPath: 'manifests/backend.yaml'

- stage: DeployLatest
  displayName: Deploy to production
  jobs:
  - deployment: 'DeployFrontend'
    pool:
      vmImage: '$(vmImageName)'
    environment: Production
    strategy:
      runOnce:
        deploy:
          steps:
            - task: DownloadPipelineArtifact@1
              inputs:
                buildType: 'current'
                artifactName: 'frontend-manifest'
                targetPath: '$(Pipeline.Workspace)'
            - task: KubernetesManifest@0
              inputs:
                action: 'deploy'
                kubernetesServiceConnection: '$(kubernetesServiceConnection)'
                namespace: 'default'
                manifests: '$(Pipeline.Workspace)/frontend.yaml'
                containers: 'diceatthetable.azurecr.io/frontend:v1.$(Build.BuildId)'
  - deployment: 'DeployBackend'
    pool:
      vmImage: '$(vmImageName)'
    environment: Production
    strategy:
      runOnce:
        deploy:
          steps:
            - task: DownloadPipelineArtifact@1
              inputs:
                buildType: 'current'
                artifactName: 'backend-manifest'
                targetPath: '$(Pipeline.Workspace)'
            - task: KubernetesManifest@0
              inputs:
                action: 'deploy'
                kubernetesServiceConnection: '$(kubernetesServiceConnection)'
                namespace: 'default'
                manifests: '$(Pipeline.Workspace)/backend.yaml'
                containers: 'diceatthetable.azurecr.io/backend:v1.$(Build.BuildId)'
